@page "/foodstores/add"
@page "/foodstores/edit/{foodstoresId:int}"
@using FoodDeliverySystem.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h1>@Title FoodStores</h1>
<hr />
<EditForm Model="@foodstores" OnValidSubmit="SaveFoodStores">
    <DataAnnotationsValidator />
    
    <div class="mb-3">
        <label for="Name" class="form-label">FoodStoresName</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="foodstores.FoodStoresName" />
        </div>
        <ValidationMessage For="@(() => foodstores.FoodStoresName)" />
    </div>

    <div class="mb-3">
        <label for="Name" class="form-label">Address</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="foodstores.StoreAddress" />
        </div>
        <ValidationMessage For="@(() => foodstores.StoreAddress)" />
    </div>
    <div class="mb-3">
        <label for="Address" class="form-label">Area</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="foodstores.StoreArea" />
        </div>
        <ValidationMessage For="@(() => foodstores.StoreArea)" />
    </div>
    <div class="mb-3">
        <label for="Cellnumber" class="form-label">Quantity</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="foodstores.FoodQuantity" />
        </div>
        <ValidationMessage For="@(() => foodstores.FoodQuantity)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {
    [Parameter]
    public int foodstoresId { get; set; }
    protected string Title = "Add";
    protected FoodStores foodstores = new();
    protected override async Task OnParametersSetAsync()
    {
        if (foodstoresId != 0)
        {
            Title = "Edit";
            foodstores = await Http.GetFromJsonAsync<FoodStores>("api/FoodStores/" + foodstoresId);
        }
    }
    protected async Task SaveFoodStores()
    {
        if (foodstores.FoodStoresID != 0)
        {
            await Http.PutAsJsonAsync("api/FoodStores", foodstores);
        }
        else
        {
            await Http.PostAsJsonAsync("api/FoodStores", foodstores);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/foodstores");
    }
}