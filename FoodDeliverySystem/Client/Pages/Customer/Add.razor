@page "/customer/add"
@page "/customer/edit/{customerId:int}"
@using FoodDeliverySystem.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h1>@Title Customer</h1>
<hr />
<EditForm Model="@customer" OnValidSubmit="SaveCustomer">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="customer.CustomerName" />
        </div>
        <ValidationMessage For="@(() => customer.CustomerName)" />
    </div>
    <div class="mb-3">
        <label for="Address" class="form-label">Address</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="customer.CustomerAddress" />
        </div>
        <ValidationMessage For="@(() => customer.CustomerAddress)" />
    </div>
    <div class="mb-3">
        <label for="Cellnumber" class="form-label">Cell No</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="customer.CustomerContact" />
        </div>
        <ValidationMessage For="@(() => customer.CustomerContact)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {
    [Parameter]
    public int customerId { get; set; }
    protected string Title = "Add";
    protected Customer customer = new();
    protected override async Task OnParametersSetAsync()
    {
        if (customerId != 0)
        {
            Title = "Edit";
            customer = await Http.GetFromJsonAsync<Customer>("api/Customer/" + customerId);
        }
    }
    protected async Task SaveCustomer()
    {
        if (customer.CustomerID != 0)
        {
            await Http.PutAsJsonAsync("api/Customer", customer);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Customer", customer);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/customer");
    }
}